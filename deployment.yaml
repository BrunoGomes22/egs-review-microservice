apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-db
  namespace: "103320"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_USER
          value: "fastapi_user"
        - name: POSTGRES_PASSWORD
          value: "securepassword"
        - name: POSTGRES_DB
          value: "review_db"
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-db
  namespace: "103320"
spec:
  ports:
    - port: 5432
  selector:
    app: postgres-db

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: review-api
  namespace: "103320"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: review-api
  template:
    metadata:
      labels:
        app: review-api
    spec:
      containers:
      - name: review-api
        image: registry.deti/103320/review-api:v1
        env:
        - name: DATABASE_URL
          value: "postgresql://fastapi_user:securepassword@postgres-db/review_db"
        ports:
        - containerPort: 8001

---
apiVersion: v1
kind: Service
metadata:
  name: review-api
  namespace: "103320"
spec:
  ports:
    - port: 8001
  selector:
    app: review-api

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: review-frontend
  namespace: "103320"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: review-frontend
  template:
    metadata:
      labels:
        app: review-frontend
    spec:
      containers:
      - name: review-frontend
        image: registry.deti/103320/review-frontend:v1
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: review-frontend
  namespace: "103320"
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30080
  selector:
    app: review-frontend